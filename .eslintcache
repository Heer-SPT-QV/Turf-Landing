[{"/Users/sptdev/Desktop/reactjs/turf2/src/index.js":"1","/Users/sptdev/Desktop/reactjs/turf2/src/App.jsx":"2","/Users/sptdev/Desktop/reactjs/turf2/src/data/context.js":"3","/Users/sptdev/Desktop/reactjs/turf2/src/routes/routes.js":"4","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Home.jsx":"5","/Users/sptdev/Desktop/reactjs/turf2/src/components/Headers.jsx":"6","/Users/sptdev/Desktop/reactjs/turf2/src/components/Bookings.jsx":"7","/Users/sptdev/Desktop/reactjs/turf2/src/config/api.js":"8","/Users/sptdev/Desktop/reactjs/turf2/src/config/headerWithoutToken.js":"9","/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotItems.jsx":"10","/Users/sptdev/Desktop/reactjs/turf2/src/routes/protected.routes.js":"11","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Cart.jsx":"12","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Login.jsx":"13","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Profile.jsx":"14","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Signup.jsx":"15","/Users/sptdev/Desktop/reactjs/turf2/src/pages/Checkout.jsx":"16","/Users/sptdev/Desktop/reactjs/turf2/src/utils/filterData.js":"17","/Users/sptdev/Desktop/reactjs/turf2/src/utils/TimeConverter.js":"18","/Users/sptdev/Desktop/reactjs/turf2/src/config/headerWithToken.js":"19","/Users/sptdev/Desktop/reactjs/turf2/src/components/CartSummary.jsx":"20","/Users/sptdev/Desktop/reactjs/turf2/src/components/CartRightSideComponent.jsx":"21","/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotCardItem.jsx":"22","/Users/sptdev/Desktop/reactjs/turf2/src/components/CartElement.jsx":"23","/Users/sptdev/Desktop/reactjs/turf2/src/components/BookingSummary.jsx":"24","/Users/sptdev/Desktop/reactjs/turf2/src/components/PaymentGateway.jsx":"25","/Users/sptdev/Desktop/reactjs/turf2/src/utils/ListData.js":"26","/Users/sptdev/Desktop/reactjs/turf2/src/utils/compareTime.js":"27","/Users/sptdev/Desktop/reactjs/turf2/src/components/invoice.jsx":"28","/Users/sptdev/Desktop/reactjs/turf2/src/pages/PaymentSuccess.jsx":"29"},{"size":146,"mtime":1610103258993,"results":"30","hashOfConfig":"31"},{"size":302,"mtime":1609325121294,"results":"32","hashOfConfig":"31"},{"size":1241,"mtime":1610022249720,"results":"33","hashOfConfig":"31"},{"size":2328,"mtime":1610196973159,"results":"34","hashOfConfig":"31"},{"size":421,"mtime":1609998907533,"results":"35","hashOfConfig":"31"},{"size":4431,"mtime":1610110132479,"results":"36","hashOfConfig":"31"},{"size":11424,"mtime":1610110132476,"results":"37","hashOfConfig":"31"},{"size":146,"mtime":1609998907527,"results":"38","hashOfConfig":"31"},{"size":130,"mtime":1609325121295,"results":"39","hashOfConfig":"31"},{"size":7651,"mtime":1610174303833,"results":"40","hashOfConfig":"31"},{"size":614,"mtime":1609998907536,"results":"41","hashOfConfig":"31"},{"size":1195,"mtime":1610103258994,"results":"42","hashOfConfig":"31"},{"size":5132,"mtime":1609998907534,"results":"43","hashOfConfig":"31"},{"size":5791,"mtime":1610174303835,"results":"44","hashOfConfig":"31"},{"size":6976,"mtime":1609998907536,"results":"45","hashOfConfig":"31"},{"size":1001,"mtime":1610103258995,"results":"46","hashOfConfig":"31"},{"size":1691,"mtime":1610088604427,"results":"47","hashOfConfig":"31"},{"size":965,"mtime":1610103258996,"results":"48","hashOfConfig":"31"},{"size":594,"mtime":1609325121295,"results":"49","hashOfConfig":"31"},{"size":1964,"mtime":1610174303832,"results":"50","hashOfConfig":"31"},{"size":4860,"mtime":1610087393175,"results":"51","hashOfConfig":"31"},{"size":1859,"mtime":1610196933990,"results":"52","hashOfConfig":"31"},{"size":2237,"mtime":1610087393174,"results":"53","hashOfConfig":"31"},{"size":2882,"mtime":1610174303831,"results":"54","hashOfConfig":"31"},{"size":2958,"mtime":1610196951015,"results":"55","hashOfConfig":"31"},{"size":551,"mtime":1610023642356,"results":"56","hashOfConfig":"31"},{"size":1055,"mtime":1610174303835,"results":"57","hashOfConfig":"31"},{"size":1057,"mtime":1610185106697,"results":"58","hashOfConfig":"31"},{"size":1531,"mtime":1610196933994,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"k304en",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/sptdev/Desktop/reactjs/turf2/src/index.js",[],["126","127"],"/Users/sptdev/Desktop/reactjs/turf2/src/App.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/data/context.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/routes/routes.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Home.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/Headers.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/Bookings.jsx",["128"],"import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport classnames from \"classnames\";\nimport axios from \"axios\";\nimport { BiCalendarWeek } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport styles from \"../css/Bookings.module.css\";\nimport GroundImage from \"../images/ground.png\";\nimport GroundImageSelected from \"../images/ground_selected.png\";\nimport api from \"../config/api\";\nimport headerWithoutToken from \"../config/headerWithoutToken\";\nimport { Context } from \"../data/context\";\nimport SlotItems from \"./SlotItems\";\nimport {\n  convertMinsToHrsMins,\n  getMaxAllowedMonth,\n} from \"../utils/TimeConverter\";\nimport { Link } from \"react-router-dom\";\nimport { filterData } from \"../utils/filterData\";\n\nconst Bookings = () => {\n  const {\n    setGroundData,\n    totalTime,\n    bookDate,\n    setBookDate,\n    setCartId,\n    setPhoneNumber,\n    setCartData,\n  } = useContext(Context);\n\n  const [isGroundSelected1, setIsGroundSelected1] = useState(true);\n  const [isGroundSelected2, setIsGroundSelected2] = useState(false);\n  const [isGroundSelected3, setIsGroundSelected3] = useState(false);\n  const [maxAllowedDate, setMaxAllowedDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n\n  const handleFetchedData = useCallback(\n    (res, FetchgroundData) => {\n      if (res.data.success) {\n        const [sortedData] = filterData(res.data.body);\n        setCartData(sortedData);\n        const selectedDateCart = sortedData[bookDate];\n\n        const newData = FetchgroundData;\n        if (selectedDateCart) {\n          if (selectedDateCart.turf01 && newData.turf01) {\n            selectedDateCart.turf01.forEach((item) => {\n              newData.turf01.forEach((item2) => {\n                if (\n                  `${item.startTime}_g1_${item.date}` ===\n                  `${item2.startTime}_g1_${item2.date}`\n                ) {\n                  item2.isSelected = true;\n                }\n              });\n            });\n          }\n\n          if (selectedDateCart.turf02 && newData.turf02) {\n            selectedDateCart.turf02.forEach((item) => {\n              newData.turf02.forEach((item2) => {\n                if (\n                  `${item.startTime}_g2_${item.date}` ===\n                  `${item2.startTime}_g2_${item2.date}`\n                ) {\n                  item2.isSelected = true;\n                }\n              });\n            });\n          }\n\n          if (selectedDateCart.turf03 && newData.turf03) {\n            selectedDateCart.turf03.forEach((item) => {\n              newData.turf03.forEach((item2) => {\n                if (\n                  `${item.startTime}_g3_${item.date}` ===\n                  `${item2.startTime}_g3_${item2.date}`\n                ) {\n                  item2.isSelected = true;\n                }\n              });\n            });\n          }\n        }\n\n        setGroundData({ ...newData });\n      }\n    },\n    [setCartData, bookDate, setGroundData]\n  );\n\n  const fetchCartData = useCallback(\n    (FetchgroundData) => {\n      const data = JSON.parse(localStorage.getItem(\"turfUserDetails\"));\n      const cartLocalId = localStorage.getItem(\"turfCart\");\n\n      setCartId(() => (cartLocalId ? cartLocalId : null));\n\n      setPhoneNumber(() =>\n        data?.user?.phoneNumber ? data.user.phoneNumber : null\n      );\n\n      // if (data === null && cartLocalId === null) {\n      //   setCartId(null);\n      // } else if (data === null && cartLocalId != null) {\n      //   setCartId(cartLocalId);\n      // } else {\n      //   setPhoneNumber(data.user.phoneNumber);\n      // }\n\n      if (data === null) {\n        axios\n          .get(api + \"user/cart?cartId=\" + cartLocalId, headerWithoutToken)\n          .then((res) => {\n            handleFetchedData(res, FetchgroundData);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      } else {\n        axios\n          .get(\n            api + \"user/cart?phoneNumber=\" + data.user.phoneNumber,\n            headerWithoutToken\n          )\n          .then((res) => {\n            handleFetchedData(res, FetchgroundData);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    },\n    [handleFetchedData, setCartId, setPhoneNumber]\n  );\n\n  const getAllSlotsByDateTime = useCallback(() => {\n    const groundList = [];\n\n    if (isGroundSelected1) {\n      groundList.push(\"turf01\");\n    }\n    if (isGroundSelected2) {\n      groundList.push(\"turf02\");\n    }\n    if (isGroundSelected3) {\n      groundList.push(\"turf03\");\n    }\n    const postData = {\n      turfIds: [...groundList],\n      date: bookDate,\n      openTime: \"2020-12-24T08:00:00.000Z\",\n      closeTime: \"2020-12-24T16:00:10.000Z\",\n      slotDuration: 30,\n    };\n    axios\n      .post(api + \"user/get-all-slots-by-date\", postData, headerWithoutToken)\n      .then((res) => {\n        const groundDataNew = res.data.body;\n        console.log(\"Get All Slots by Date \", groundDataNew);\n        if (groundDataNew) {\n          if (groundDataNew.turf01) {\n            groundDataNew.turf01.forEach((item) => {\n              item.id = `${item.startTime}_g1_${item.date}`;\n            });\n          }\n\n          if (groundDataNew.turf02) {\n            groundDataNew.turf02.forEach((item) => {\n              item.id = `${item.startTime}_g2_${item.date}`;\n            });\n          }\n\n          if (groundDataNew.turf03) {\n            groundDataNew.turf03.forEach((item) => {\n              item.id = `${item.startTime}_g3_${item.date}`;\n            });\n          }\n\n          fetchCartData(groundDataNew);\n        } else {\n          toast.error(\"No Slots Found\");\n        }\n      })\n      .catch((error) => {\n        toast.error(error.message);\n        console.log(error.message);\n      });\n  }, [\n    isGroundSelected1,\n    isGroundSelected2,\n    isGroundSelected3,\n    bookDate,\n    fetchCartData,\n  ]);\n\n  const setUserData = useCallback(() => {\n    const turfcartId = localStorage.getItem(\"turfCart\");\n    const data = JSON.parse(localStorage.getItem(\"turfUserDetails\"));\n\n    setCartId(() => (turfcartId ? turfcartId : null));\n    setPhoneNumber(() =>\n      data?.user?.phoneNumber ? data?.user?.phoneNumber : null\n    );\n  }, [setCartId, setPhoneNumber]);\n\n  useEffect(() => {\n    getMaxAllowedMonth(setMaxAllowedDate);\n    setUserData();\n    getAllSlotsByDateTime();\n  }, [getAllSlotsByDateTime, setUserData]);\n\n  return (\n    <div className={classnames(\"container is-fluid\")}>\n      <div className={classnames(\"columns\", styles.columnsWrapper)}>\n        <div className={classnames(\"column box\", styles.addGroundBackground)}>\n          <figure\n            className={classnames(\"image\", styles.rotate1)}\n            onClick={() => {\n              setIsGroundSelected1(!isGroundSelected1);\n            }}\n          >\n            {isGroundSelected1 ? (\n              <img\n                src={GroundImageSelected}\n                alt=\"Ground 1\"\n                className={styles.GroundImage}\n              />\n            ) : (\n              <img\n                src={GroundImage}\n                alt=\"Ground 1\"\n                className={styles.GroundImage}\n              />\n            )}\n          </figure>\n\n          <figure\n            className={classnames(\"image\", styles.rotate)}\n            onClick={() => {\n              setIsGroundSelected2(!isGroundSelected2);\n            }}\n          >\n            {isGroundSelected2 ? (\n              <img\n                src={GroundImageSelected}\n                alt=\"Ground 2\"\n                className={styles.GroundImage}\n              />\n            ) : (\n              <img\n                src={GroundImage}\n                alt=\"Ground 2\"\n                className={styles.GroundImage}\n              />\n            )}\n          </figure>\n\n          <figure\n            className={classnames(\"image\", styles.rotate)}\n            onClick={() => {\n              setIsGroundSelected3(!isGroundSelected3);\n            }}\n          >\n            {isGroundSelected3 ? (\n              <img\n                src={GroundImageSelected}\n                alt=\"Ground 3\"\n                className={styles.GroundImage}\n              />\n            ) : (\n              <img\n                src={GroundImage}\n                alt=\"Ground 3\"\n                className={styles.GroundImage}\n              />\n            )}\n          </figure>\n        </div>\n\n        <div\n          className={classnames(\n            \"column box is-two-thirds\",\n            styles.addMinHeight,\n            styles.addBookingBackground\n          )}\n        >\n          <div className={classnames(styles.timeBarWrapper)}>\n            <div style={{ display: \"flex\" }} className={styles.dateWrapper}>\n              <BiCalendarWeek size={40} color=\"#FFF\" className=\"mx-3\" />\n              <div className=\"control has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"date\"\n                  placeholder=\"Pick Date\"\n                  value={bookDate}\n                  min={new Date().toISOString().slice(0, 10)}\n                  max={maxAllowedDate}\n                  onChange={(event) => {\n                    setBookDate(event.target.value);\n                  }}\n                />\n                <span className=\"icon is-small is-right\">\n                  <BiCalendarWeek color=\"#000\" />\n                </span>\n              </div>\n            </div>\n\n            <div style={{ display: \"flex\" }}>\n              <BiCalendarWeek size={40} color=\"#FFF\" className=\"mx-3\" />\n              <div className=\"control\">\n                <input\n                  className=\"input \"\n                  type=\"time\"\n                  placeholder=\"Pick Start Time\"\n                  value={startTime}\n                  onChange={(event) => setStartTime(event.target.value)}\n                />\n              </div>\n              <div className=\"control\">\n                <input\n                  className=\"input ml-3\"\n                  type=\"time\"\n                  placeholder=\"Pick End Time\"\n                  value={endTime}\n                  onChange={(event) => setEndTime(event.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className={classnames(styles.slotsWrapper)}>\n            <SlotItems />\n          </div>\n          <div className={classnames(styles.checkoutWrapper, \"my-3\")}>\n            <div className={styles.timeBarWrapper}>\n              <div style={{ display: \"flex\" }} className={styles.dateWrapper , \"is-hidden-touch\"}>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={classnames(styles.hourcal, \"input is-size-4-mobile is-size-3\")}\n                      type=\"text\"\n                      placeholder=\"Total Hours\"\n                      readOnly\n                      value={convertMinsToHrsMins(totalTime)}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <Link\n                to=\"/cart\"\n                className={classnames(\n                  styles.checkoutbtn,\n                  \"button is-success is-light my-3 is-size-4-mobile is-size-3\"\n                )}\n              >\n                Checkout\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Bookings;\n","/Users/sptdev/Desktop/reactjs/turf2/src/config/api.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/config/headerWithoutToken.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotItems.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/routes/protected.routes.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Cart.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Login.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Profile.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Signup.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/pages/Checkout.jsx",["129"],"import React, { useContext } from \"react\";\nimport classnames from \"classnames\";\nimport { Context } from \"../data/context\";\nimport styles from \"../css/Checkout.module.css\";\nimport CartSummary from \"../components/CartSummary\";\nimport CartRightSideComponent from \"../components/CartRightSideComponent\";\nimport PaymentGateway from \"../components/PaymentGateway\";\nimport { ListData } from \"../utils/ListData\";\n\nconst Checkout = () => {\n  const { cartData } = useContext(Context);\n  const allData = ListData(cartData);\n\n  return (\n    <div className={classnames(\"section\", styles.CheckoutWrapper)}>\n      <div\n        className={classnames(\"container is-fluid\", styles.overRideContainer)}\n      >\n        <div className={classnames(\"columns mt-5\")}>\n          <div\n            className={classnames(\n              \"column box has-text-centered\",\n              styles.CheckoutLeftColumn\n            )}\n          >\n            <CartSummary />\n            <CartRightSideComponent />\n          </div>\n          <div className={classnames(\"column\", styles.CheckoutRightColumn)}>\n            <PaymentGateway />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","/Users/sptdev/Desktop/reactjs/turf2/src/utils/filterData.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/utils/TimeConverter.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/config/headerWithToken.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/CartSummary.jsx",["130"],"import React, { useContext } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"../css/Cart.module.css\";\nimport { BiRupee } from \"react-icons/bi\";\nimport { Context } from \"../data/context\";\n\nconst CartSummary = () => {\n  const { totalAmount, totalSlots } = useContext(Context);\n  return (\n    <>\n      <p className={classnames(\"subtitle is-1 is-capitalized has-text-white\")}>\n        cart\n      </p>\n\n      <div className={classnames(styles.cartSummaryInfo)}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <p\n            className={classnames(\n              \"subtitle is-3 is-capitalized has-text-white\"\n            )}\n          >\n            Total Amount\n          </p>\n          <p\n            className={classnames(\n              \"subtitle is-3 is-capitalized has-text-white\"\n            )}\n          >\n            {totalAmount}\n          </p>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <p\n            className={classnames(\n              \"subtitle is-3 is-capitalized has-text-white\"\n            )}\n          >\n            Total Slots\n          </p>\n          <p\n            className={classnames(\n              \"subtitle is-3 is-capitalized has-text-white\"\n            )}\n          >\n            {totalSlots}\n          </p>\n        </div>\n      </div>\n\n      {/* <div className={classnames(styles.cartTotalInfo)}>\n        <BiRupee size={40} color=\"#FFF\" />\n        <div className=\"field\">\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Total Amount\"\n              readOnly\n              value={totalAmount}\n            />\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n};\n\nexport default CartSummary;\n","/Users/sptdev/Desktop/reactjs/turf2/src/components/CartRightSideComponent.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotCardItem.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/components/CartElement.jsx",["131"],"import React, { useContext } from \"react\";\nimport classnames from \"classnames\";\nimport \"moment-timezone\";\nimport Moment from \"react-moment\";\nimport { BiRupee } from \"react-icons/bi\";\nimport { MdDelete } from \"react-icons/md\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport styles from \"../css/CartElement.module.css\";\nimport { Context } from \"../data/context\";\nimport api from \"../config/api\";\nimport headerWithToken from \"../config/headerWithToken\";\nimport { tConvert } from \"../utils/TimeConverter\";\n\nconst CartElement = ({ data, label, reloadData }) => {\n  const { phoneNumber, cartId } = useContext(Context);\n\n  const onRemoveSlots = (e) => {\n    const body = {\n      cartId: cartId,\n      userPhoneNumber: phoneNumber,\n      removeSlot: e,\n    };\n    const url = api + \"user/cart/remove\";\n    axios\n      .post(url, body, headerWithToken)\n      .then(() => {\n        toast.success(\"Removed from Cart\");\n        reloadData();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className={classnames(styles.groundWrapper, \"box\")}>\n      <p className=\"title has-text-white\">{label}</p>\n      <div className={styles.scrollGroundItems}>\n        {data.map((item, index) => {\n          return (\n            <div\n              className={classnames(\"box\", styles.groundItemWrapper)}\n              key={index}\n            >\n              <div className={styles.timeDurationWrapper}>\n                <p>{tConvert(item.startTime)}</p>\n                <p>{tConvert(item.endTime)}</p>\n              </div>\n\n              <div className={styles.currencyWrapper}>\n                <p className={(styles.slotPriceWrapper, \"title is-4\")}>\n                  <span>\n                    <BiRupee size={30} color={\"#000\"} />\n                  </span>\n                  <span>{item.price}</span>\n                </p>\n              </div>\n\n              <span\n                onClick={() => onRemoveSlots(item)}\n                className={classnames(styles.deleteWrapper, \"is-clickable\")}\n              >\n                <MdDelete color=\"#FFF\" />\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CartElement;\n","/Users/sptdev/Desktop/reactjs/turf2/src/components/BookingSummary.jsx",["132"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"../css/BookingSummary.module.css\";\nimport axios from \"axios\";\nimport api from \"../config/api\";\nimport headerWithToken from \"../config/headerWithToken\";\nimport { SlotCardItem } from \"./SlotCardItem\";\n\nconst BookingSummary = () => {\n  const [history, setHistory] = useState([]);\n  const [upcoming, setUpComing] = useState([]);\n\n  const bookingSummary = useCallback(() => {\n    const data = JSON.parse(localStorage.getItem(\"turfUserDetails\"));\n    axios\n      .get(\n        api + \"user/booking-history?userPhoneNumber=\" + data.user.phoneNumber,\n        headerWithToken\n      )\n      .then((res) => {\n        const filterUpComing = res.data.body.bookedTimeSlots.filter(function (\n          item\n        ) {\n          return new Date() < new Date(item.date);\n        });\n        setUpComing(filterUpComing);\n        const filterHistory = res.data.body.bookedTimeSlots.filter(function (\n          item\n        ) {\n          return new Date() > new Date(item.date);\n        });\n        setHistory(filterHistory);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleOnClick = (index, ground, id, item) => {\n    console.log(\"delete\", item);\n    const body = {\n      bookingId: item.bookingId,\n      price: item.price,\n      turfId: item.turfId,\n      userId: item.userId,\n      date: item.date,\n      startTime: item.startTime,\n      endTime: item.endTime,\n    };\n    axios\n      .post(api + \"user/cancel-booking\", body, headerWithToken)\n      .then((res) => {\n        console.log(res.data);\n      });\n  };\n\n  useEffect(() => {\n    bookingSummary();\n  }, [bookingSummary]);\n\n  return (\n    <>\n      <div className={classnames(\"box\", styles.dateCardWrapper)}>\n        <p className=\"card-header p-5 title has-text-white\">Upcoming Booking</p>\n        <div className={classnames(\"card-content\", styles.historygrid)}>\n          {upcoming &&\n            upcoming.map((item, index) => (\n              <SlotCardItem\n                key={index}\n                item={item}\n                index={index}\n                handleOnClick={handleOnClick}\n                id={1}\n              />\n            ))}\n        </div>\n      </div>\n      <div className={classnames(\"box\", styles.dateCardWrapper)}>\n        <p className=\"card-header title has-text-white p-5\">Booking History</p>\n        <div className={classnames(\"card-content\", styles.historygrid)}>\n          {history &&\n            history.map((item, index) => (\n              <SlotCardItem\n                key={index}\n                item={item}\n                index={index}\n                handleOnClick={() => {}}\n                id={1}\n                isHistory={true}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default BookingSummary;\n","/Users/sptdev/Desktop/reactjs/turf2/src/components/PaymentGateway.jsx",[],"/Users/sptdev/Desktop/reactjs/turf2/src/utils/ListData.js",[],"/Users/sptdev/Desktop/reactjs/turf2/src/utils/compareTime.js",[],["133","134"],"/Users/sptdev/Desktop/reactjs/turf2/src/components/invoice.jsx",["135","136","137"],"import React, { useState, useCallback, useEffect } from \"react\";\n\nconst Invoice = () =>{\n    return(\n    <div>\n        <div>Invoice</div>\n        <table class=\"table is-responsive\">\n            <thead>\n            <tr>\n                <th>Payment Method</th>\n                <th>Payment Id</th>\n                <th>Ground</th>\n                <th>Price</th>\n                <th>Total</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>Lorem ipsum - cell A1</td>\n                <td>Lorem ipsum - cell B1</td>\n                <td>Lorem ipsum - cell C1</td>\n            </tr>\n            <tr>\n                <td>Lorem ipsum - cell A2</td>\n                <td>Lorem ipsum - cell B2</td>\n                <td>Lorem ipsum - cell C2</td>\n            </tr>\n            <tr>\n                <td>Lorem ipsum - cell A3</td>\n                <td>Lorem ipsum - cell B3</td>\n                <td>Lorem ipsum - cell C3</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n    );\n}\nexport default Invoice;","/Users/sptdev/Desktop/reactjs/turf2/src/pages/PaymentSuccess.jsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":337,"column":78,"nodeType":"144","messageId":"145","endLine":337,"endColumn":79},{"ruleId":"146","severity":1,"message":"147","line":12,"column":9,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"150","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"146","severity":1,"message":"151","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":55,"column":7,"nodeType":"154","endLine":55,"endColumn":9,"suggestions":"155"},{"ruleId":"138","replacedBy":"156"},{"ruleId":"140","replacedBy":"157"},{"ruleId":"146","severity":1,"message":"158","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"159","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":38},{"ruleId":"146","severity":1,"message":"160","line":1,"column":40,"nodeType":"148","messageId":"149","endLine":1,"endColumn":49},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'allData' is assigned a value but never used.","Identifier","unusedVar","'BiRupee' is defined but never used.","'Moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bookingSummary'. Either include it or remove the dependency array.","ArrayExpression",["163"],["161"],["162"],"'useState' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},"Update the dependencies array to be: [bookingSummary]",{"range":"166","text":"167"},[1898,1900],"[bookingSummary]"]