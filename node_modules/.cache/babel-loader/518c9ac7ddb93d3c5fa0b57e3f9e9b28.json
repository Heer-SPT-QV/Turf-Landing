{"ast":null,"code":"import _objectSpread from\"/Users/sptdev/Desktop/reactjs/turf2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectWithoutProperties from\"/Users/sptdev/Desktop/reactjs/turf2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useContext}from\"react\";import{Redirect,Route}from\"react-router-dom\";import{Context}from\"../data/context\";var ProtectedRoutes=function ProtectedRoutes(_ref){var children=_ref.children,rest=_objectWithoutProperties(_ref,[\"children\"]);var _useContext=useContext(Context),isLoggedIn=_useContext.isLoggedIn;return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(_ref2){var location=_ref2.location;return isLoggedIn?children:/*#__PURE__*/_jsx(Redirect,{to:{pathname:\"/login\",state:{from:location}}});}}));};export default ProtectedRoutes;","map":{"version":3,"sources":["/Users/sptdev/Desktop/reactjs/turf2/src/routes/protected.routes.js"],"names":["React","useContext","Redirect","Route","Context","ProtectedRoutes","children","rest","isLoggedIn","location","pathname","state","from"],"mappings":"kXAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,iBAAxB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAXC,IAAW,6DAC1BN,UAAU,CAACG,OAAD,CADgB,CACzCI,UADyC,aACzCA,UADyC,CAGjD,mBACE,KAAC,KAAD,gCACMD,IADN,MAEE,MAAM,CAAE,sBAAkB,IAAfE,CAAAA,QAAe,OAAfA,QAAe,CACxB,MAAOD,CAAAA,UAAU,CACfF,QADe,cAGf,KAAC,QAAD,EACE,EAAE,CAAE,CACFI,QAAQ,CAAE,QADR,CAEFC,KAAK,CAAE,CACLC,IAAI,CAAEH,QADD,CAFL,CADN,EAHF,CAYD,CAfH,GADF,CAmBD,CAtBD,CAwBA,cAAeJ,CAAAA,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Context } from \"../data/context\";\n\nconst ProtectedRoutes = ({ children, ...rest }) => {\n  const { isLoggedIn } = useContext(Context);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoutes;\n"]},"metadata":{},"sourceType":"module"}