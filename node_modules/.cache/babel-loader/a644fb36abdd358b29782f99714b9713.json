{"ast":null,"code":"export const filterData = receviedData => {\n  const selectedSlots = (receviedData === null || receviedData === void 0 ? void 0 : receviedData.selectedSlots) || []; //   const selectedSlot = {\n  //     \"2020-12-31\": {\n  //       turf01: [],\n  //       turf02: [],\n  //       turf03: [],\n  //     },\n  //   };\n\n  let finalObj = {};\n  let dateArry = [];\n  selectedSlots.forEach(games => {\n    const date = games.date;\n\n    if (finalObj[date]) {\n      if (games.turfId === \"turf01\") {\n        if (finalObj[date][\"turf01\"]) {\n          finalObj[date][\"turf01\"].push(games);\n        } else {\n          finalObj[date][\"turf01\"] = [];\n          finalObj[date][\"turf01\"].push(games);\n        }\n      } else if (games.turfId === \"turf02\") {\n        if (finalObj[date][\"turf02\"]) {\n          finalObj[date][\"turf02\"].push(games);\n        } else {\n          finalObj[date][\"turf02\"] = [];\n          finalObj[date][\"turf02\"].push(games);\n        }\n      } else if (games.turfId === \"turf03\") {\n        if (finalObj[date][\"turf03\"]) {\n          finalObj[date][\"turf03\"].push(games);\n        } else {\n          finalObj[date][\"turf03\"] = [];\n          finalObj[date][\"turf03\"].push(games);\n        }\n      }\n    } else {\n      dateArry.push(date);\n\n      if (games.turfId === \"turf01\") {\n        finalObj[date] = {\n          turf01: [games],\n          turf02: [],\n          turf03: []\n        };\n      } else if (games.turfId === \"turf02\") {\n        finalObj[date] = {\n          turf01: [],\n          turf02: [games],\n          turf03: []\n        };\n      }\n\n      if (games.turfId === \"turf03\") {\n        finalObj[date] = {\n          turf01: [],\n          turf02: [],\n          turf03: [games]\n        };\n      }\n    }\n  });\n  return [finalObj, dateArry];\n};","map":{"version":3,"sources":["/Users/sptdev/Desktop/reactjs/turf2/src/utils/filterData.js"],"names":["filterData","receviedData","selectedSlots","finalObj","dateArry","forEach","games","date","turfId","push","turf01","turf02","turf03"],"mappings":"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","sourcesContent":["export const filterData = (receviedData) => {\n  const selectedSlots = receviedData?.selectedSlots || [];\n\n  //   const selectedSlot = {\n  //     \"2020-12-31\": {\n  //       turf01: [],\n  //       turf02: [],\n  //       turf03: [],\n  //     },\n  //   };\n\n  let finalObj = {};\n  let dateArry = [];\n  selectedSlots.forEach((games) => {\n    const date = games.date;\n    if (finalObj[date]) {\n      if (games.turfId === \"turf01\") {\n        if (finalObj[date][\"turf01\"]) {\n          finalObj[date][\"turf01\"].push(games);\n        } else {\n          finalObj[date][\"turf01\"] = [];\n          finalObj[date][\"turf01\"].push(games);\n        }\n      } else if (games.turfId === \"turf02\") {\n        if (finalObj[date][\"turf02\"]) {\n          finalObj[date][\"turf02\"].push(games);\n        } else {\n          finalObj[date][\"turf02\"] = [];\n          finalObj[date][\"turf02\"].push(games);\n        }\n      } else if (games.turfId === \"turf03\") {\n        if (finalObj[date][\"turf03\"]) {\n          finalObj[date][\"turf03\"].push(games);\n        } else {\n          finalObj[date][\"turf03\"] = [];\n          finalObj[date][\"turf03\"].push(games);\n        }\n      }\n    } else {\n      dateArry.push(date);\n      if (games.turfId === \"turf01\") {\n        finalObj[date] = {\n          turf01: [games],\n          turf02: [],\n          turf03: [],\n        };\n      } else if (games.turfId === \"turf02\") {\n        finalObj[date] = {\n          turf01: [],\n          turf02: [games],\n          turf03: [],\n        };\n      }\n      if (games.turfId === \"turf03\") {\n        finalObj[date] = {\n          turf01: [],\n          turf02: [],\n          turf03: [games],\n        };\n      }\n    }\n  });\n  return [finalObj, dateArry];\n};\n"]},"metadata":{},"sourceType":"module"}