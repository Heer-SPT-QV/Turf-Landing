{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import classnames from\"classnames\";import{BiRupee}from\"react-icons/bi\";import styles from\"../css/SlotItems.module.css\";import{tConvert}from\"../utils/TimeConverter\";export var SlotCardItem=function SlotCardItem(_ref){var item=_ref.item,index=_ref.index,handleOnClick=_ref.handleOnClick,id=_ref.id,_ref$isHistory=_ref.isHistory,isHistory=_ref$isHistory===void 0?false:_ref$isHistory;return/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return handleOnClick(index,id,item.id,item);},className:classnames(\"card is-clickable\",styles.cardItem),children:/*#__PURE__*/_jsxs(\"div\",{className:classnames(styles.cardItemContent),children:[/*#__PURE__*/_jsxs(\"div\",{className:classnames(styles.slotTimeWrapper,item.isSelected&&styles.cardClicked),children:[isHistory?/*#__PURE__*/_jsxs(\"p\",{className:styles.groundName,style:{color:item.isSelected?\"white\":\"black\"},children:[item.turfId==='turf01'?/*#__PURE__*/_jsx(\"div\",{children:\"Ground 1\"}):/*#__PURE__*/_jsx(\"div\",{}),item.turfId==='turf02'?/*#__PURE__*/_jsx(\"div\",{children:\"Ground 2\"}):/*#__PURE__*/_jsx(\"div\",{}),item.turfId==='turf03'?/*#__PURE__*/_jsx(\"div\",{children:\"Ground 3\"}):/*#__PURE__*/_jsx(\"div\",{})]}):\"\",/*#__PURE__*/_jsx(\"p\",{style:{color:item.isSelected?\"white\":\"black\"},children:tConvert(item.startTime)}),/*#__PURE__*/_jsx(\"p\",{style:{color:item.isSelected?\"white\":\"black\"},children:tConvert(item.endTime)}),isHistory?/*#__PURE__*/_jsx(\"p\",{style:{color:item.isSelected?\"white\":\"black\"},children:item.date}):\"\"]}),/*#__PURE__*/_jsx(\"div\",{className:styles.currencyWrapper,children:/*#__PURE__*/_jsxs(\"p\",{className:(styles.slotPriceWrapper,\"title is-4\"),children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(BiRupee,{size:30,color:\"#000\"})}),/*#__PURE__*/_jsx(\"span\",{children:item.price})]})})]})},index);};","map":{"version":3,"sources":["/var/www/turf2/src/components/SlotCardItem.jsx"],"names":["React","classnames","BiRupee","styles","tConvert","SlotCardItem","item","index","handleOnClick","id","isHistory","cardItem","cardItemContent","slotTimeWrapper","isSelected","cardClicked","groundName","color","turfId","startTime","endTime","date","currencyWrapper","slotPriceWrapper","price"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,OAASC,QAAT,KAAyB,wBAAzB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAMtB,IALJC,CAAAA,IAKI,MALJA,IAKI,CAJJC,KAII,MAJJA,KAII,CAHJC,aAGI,MAHJA,aAGI,CAFJC,EAEI,MAFJA,EAEI,qBADJC,SACI,CADJA,SACI,yBADQ,KACR,gBACJ,mBACE,YACE,OAAO,CAAE,yBAAMF,CAAAA,aAAa,CAACD,KAAD,CAAQE,EAAR,CAAYH,IAAI,CAACG,EAAjB,CAAqBH,IAArB,CAAnB,EADX,CAEE,SAAS,CAAEL,UAAU,CAAC,mBAAD,CAAsBE,MAAM,CAACQ,QAA7B,CAFvB,uBAKE,aAAK,SAAS,CAAEV,UAAU,CAACE,MAAM,CAACS,eAAR,CAA1B,wBACE,aACE,SAAS,CAAEX,UAAU,CACnBE,MAAM,CAACU,eADY,CAEnBP,IAAI,CAACQ,UAAL,EAAmBX,MAAM,CAACY,WAFP,CADvB,WAMGL,SAAS,cACV,WAAG,SAAS,CAAEP,MAAM,CAACa,UAArB,CAAiC,KAAK,CAAE,CAAEC,KAAK,CAAEX,IAAI,CAACQ,UAAL,CAAkB,OAAlB,CAA4B,OAArC,CAAxC,WACGR,IAAI,CAACY,MAAL,GAAgB,QAAhB,cAA2B,iCAA3B,cAAiD,cADpD,CAEGZ,IAAI,CAACY,MAAL,GAAgB,QAAhB,cAA2B,iCAA3B,cAAiD,cAFpD,CAGGZ,IAAI,CAACY,MAAL,GAAgB,QAAhB,cAA2B,iCAA3B,cAAiD,cAHpD,GADU,CAON,EAbN,cAeE,UAAG,KAAK,CAAE,CAAED,KAAK,CAAEX,IAAI,CAACQ,UAAL,CAAkB,OAAlB,CAA4B,OAArC,CAAV,UACGV,QAAQ,CAACE,IAAI,CAACa,SAAN,CADX,EAfF,cAkBE,UAAG,KAAK,CAAE,CAAEF,KAAK,CAAEX,IAAI,CAACQ,UAAL,CAAkB,OAAlB,CAA4B,OAArC,CAAV,UACGV,QAAQ,CAACE,IAAI,CAACc,OAAN,CADX,EAlBF,CAqBGV,SAAS,cACR,UAAG,KAAK,CAAE,CAAEO,KAAK,CAAEX,IAAI,CAACQ,UAAL,CAAkB,OAAlB,CAA4B,OAArC,CAAV,UACGR,IAAI,CAACe,IADR,EADQ,CAKN,EA1BN,GADF,cA+BE,YAAK,SAAS,CAAElB,MAAM,CAACmB,eAAvB,uBACE,WAAG,SAAS,EAAGnB,MAAM,CAACoB,gBAAP,CAAyB,YAA5B,CAAZ,wBACE,mCACE,KAAC,OAAD,EAAS,IAAI,CAAE,EAAf,CAAmB,KAAK,CAAE,MAA1B,EADF,EADF,cAIE,sBAAOjB,IAAI,CAACkB,KAAZ,EAJF,GADF,EA/BF,GALF,EAGOjB,KAHP,CADF,CAgDD,CAvDM","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { BiRupee } from \"react-icons/bi\";\nimport styles from \"../css/SlotItems.module.css\";\nimport { tConvert } from \"../utils/TimeConverter\";\n\nexport const SlotCardItem = ({\n  item,\n  index,\n  handleOnClick,\n  id,\n  isHistory = false,\n}) => {\n  return (\n    <div\n      onClick={() => handleOnClick(index, id, item.id, item)}\n      className={classnames(\"card is-clickable\", styles.cardItem)}\n      key={index}\n    >\n      <div className={classnames(styles.cardItemContent)}>\n        <div\n          className={classnames(\n            styles.slotTimeWrapper,\n            item.isSelected && styles.cardClicked\n          )}\n        >\n          {isHistory ? (\n          <p className={styles.groundName} style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n            {item.turfId === 'turf01' ? <div>Ground 1</div> : <div></div>}\n            {item.turfId === 'turf02' ? <div>Ground 2</div> : <div></div>}\n            {item.turfId === 'turf03' ? <div>Ground 3</div> : <div></div>}\n          </p>\n          ) : (\n              \"\"\n            )}\n          <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n            {tConvert(item.startTime)}\n          </p>\n          <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n            {tConvert(item.endTime)}\n          </p>\n          {isHistory ? (\n            <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n              {item.date}\n            </p>\n          ) : (\n              \"\"\n            )}\n        </div>\n\n        <div className={styles.currencyWrapper}>\n          <p className={(styles.slotPriceWrapper, \"title is-4\")}>\n            <span>\n              <BiRupee size={30} color={\"#000\"} />\n            </span>\n            <span>{item.price}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}