{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotCardItem.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { BiRupee } from \"react-icons/bi\";\nimport styles from \"../css/SlotItems.module.css\";\nimport { tConvert } from \"../utils/TimeConverter\";\nexport const SlotCardItem = ({\n  item,\n  index,\n  handleOnClick,\n  id,\n  isHistory = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleOnClick(index, id, item.id, item),\n    className: classnames(\"card is-clickable\", styles.cardItem),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(styles.cardItemContent),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames(styles.slotTimeWrapper, item.isSelected && styles.cardClicked),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: item.isSelected ? \"white\" : \"black\"\n          },\n          children: tConvert(item.startTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: item.isSelected ? \"white\" : \"black\"\n          },\n          children: tConvert(item.endTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), isHistory ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: item.isSelected ? \"white\" : \"black\"\n          },\n          children: item.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.currencyWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: (styles.slotPriceWrapper, \"title is-4\"),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(BiRupee, {\n              size: 30,\n              color: \"#000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = SlotCardItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotCardItem\");","map":{"version":3,"sources":["/Users/sptdev/Desktop/reactjs/turf2/src/components/SlotCardItem.jsx"],"names":["React","classnames","BiRupee","styles","tConvert","SlotCardItem","item","index","handleOnClick","id","isHistory","cardItem","cardItemContent","slotTimeWrapper","isSelected","cardClicked","color","startTime","endTime","date","currencyWrapper","slotPriceWrapper","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA,aAH2B;AAI3BC,EAAAA,EAJ2B;AAK3BC,EAAAA,SAAS,GAAG;AALe,CAAD,KAMtB;AACJ,sBACE;AACE,IAAA,OAAO,EAAE,MAAMF,aAAa,CAACD,KAAD,EAAQE,EAAR,EAAYH,IAAI,CAACG,EAAjB,EAAqBH,IAArB,CAD9B;AAEE,IAAA,SAAS,EAAEL,UAAU,CAAC,mBAAD,EAAsBE,MAAM,CAACQ,QAA7B,CAFvB;AAAA,2BAKE;AAAK,MAAA,SAAS,EAAEV,UAAU,CAACE,MAAM,CAACS,eAAR,CAA1B;AAAA,8BACE;AACE,QAAA,SAAS,EAAEX,UAAU,CACnBE,MAAM,CAACU,eADY,EAEnBP,IAAI,CAACQ,UAAL,IAAmBX,MAAM,CAACY,WAFP,CADvB;AAAA,gCAME;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEV,IAAI,CAACQ,UAAL,GAAkB,OAAlB,GAA4B;AAArC,WAAV;AAAA,oBACGV,QAAQ,CAACE,IAAI,CAACW,SAAN;AADX;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAG,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAEV,IAAI,CAACQ,UAAL,GAAkB,OAAlB,GAA4B;AAArC,WAAV;AAAA,oBACGV,QAAQ,CAACE,IAAI,CAACY,OAAN;AADX;AAAA;AAAA;AAAA;AAAA,gBATF,EAYGR,SAAS,gBACR;AAAG,UAAA,KAAK,EAAE;AAAEM,YAAAA,KAAK,EAAEV,IAAI,CAACQ,UAAL,GAAkB,OAAlB,GAA4B;AAArC,WAAV;AAAA,oBACGR,IAAI,CAACa;AADR;AAAA;AAAA;AAAA;AAAA,gBADQ,GAKR,EAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE;AAAK,QAAA,SAAS,EAAEhB,MAAM,CAACiB,eAAvB;AAAA,+BACE;AAAG,UAAA,SAAS,GAAGjB,MAAM,CAACkB,gBAAP,EAAyB,YAA5B,CAAZ;AAAA,kCACE;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAE,EAAf;AAAmB,cAAA,KAAK,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAOf,IAAI,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF,KAGOf,KAHP;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA9CM;KAAMF,Y","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { BiRupee } from \"react-icons/bi\";\nimport styles from \"../css/SlotItems.module.css\";\nimport { tConvert } from \"../utils/TimeConverter\";\n\nexport const SlotCardItem = ({\n  item,\n  index,\n  handleOnClick,\n  id,\n  isHistory = false,\n}) => {\n  return (\n    <div\n      onClick={() => handleOnClick(index, id, item.id, item)}\n      className={classnames(\"card is-clickable\", styles.cardItem)}\n      key={index}\n    >\n      <div className={classnames(styles.cardItemContent)}>\n        <div\n          className={classnames(\n            styles.slotTimeWrapper,\n            item.isSelected && styles.cardClicked\n          )}\n        >\n          <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n            {tConvert(item.startTime)}\n          </p>\n          <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n            {tConvert(item.endTime)}\n          </p>\n          {isHistory ? (\n            <p style={{ color: item.isSelected ? \"white\" : \"black\" }}>\n              {item.date}\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className={styles.currencyWrapper}>\n          <p className={(styles.slotPriceWrapper, \"title is-4\")}>\n            <span>\n              <BiRupee size={30} color={\"#000\"} />\n            </span>\n            <span>{item.price}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}